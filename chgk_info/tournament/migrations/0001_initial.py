# Generated by Django 3.1.7 on 2021-05-14 00:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('team', '0001_initial'),
        ('player', '0001_initial'),
        ('city', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TournamentBaseModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('number_of_questions', models.IntegerField()),
                ('questions_per_tour', models.JSONField()),
                ('difficulty_level', models.FloatField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Соревнование',
                'verbose_name_plural': 'Соревнования',
            },
        ),
        migrations.CreateModel(
            name='Regular',
            fields=[
                ('tournamentbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.tournamentbasemodel')),
                ('question_file', models.FileField(upload_to='media')),
            ],
            options={
                'verbose_name': 'Синхрон',
                'verbose_name_plural': 'Синхроны',
            },
            bases=('tournament.tournamentbasemodel',),
        ),
        migrations.CreateModel(
            name='TournamentCompetitorsTeams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_name', models.CharField(max_length=255, null=True)),
                ('results', models.JSONField(default=None)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournamentbasemodel')),
            ],
            options={
                'verbose_name': 'Команда-участница',
                'verbose_name_plural': 'Команды-участницы',
            },
        ),
        migrations.CreateModel(
            name='TournamentCompetitorsPlayers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.player')),
                ('tournament_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.tournamentcompetitorsteams')),
            ],
            options={
                'verbose_name': 'Игрок-участник',
                'verbose_name_plural': 'Игроки-участники',
            },
        ),
        migrations.CreateModel(
            name='Cup',
            fields=[
                ('tournamentbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='tournament.tournamentbasemodel')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='city.city')),
                ('posted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Очник',
                'verbose_name_plural': 'Очники',
            },
            bases=('tournament.tournamentbasemodel',),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='host', to=settings.AUTH_USER_MODEL)),
                ('representative', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='representative', to=settings.AUTH_USER_MODEL)),
                ('regular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournament.regular')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
    ]
