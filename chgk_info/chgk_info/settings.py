"""
Django settings for chgk_info project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'yq63cuez)6zx1ftwmbiq+6&bu+ai#z^86i$8%fw&*q0=jg&$r&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'auth_',
    'city',
    'team',
    'player',
    'tournament',
    'rest_framework',
    'rest_framework_jwt'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTH_USER_MODEL = 'auth_.ChgkUser'

CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'chgk_info.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chgk_info.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'chgk_info',
        'USER': 'chgk_user',
        'PASSWORD': 'chgk',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}

STATIC_URL = '/static/'


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s -- %(asctime)s: %(message)s',
        },
        'simple': {
            'format': '%(levelname)s -- %(message)s'
        }
    },
    'handlers': {
        'city_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'city.log',
            'formatter': 'verbose'
        },
        'team_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'team.log',
            'formatter': 'verbose'
        },
        'player_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'player.log',
            'formatter': 'verbose'
        },
        'auth_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'auth.log',
            'formatter': 'verbose'
        },
        'tournament_handler': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'tournament.log',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'city': {
            'handlers': ['city_handler'],
            'level': 'DEBUG',
        },
        'team': {
            'handlers': ['team_handler'],
            'level': 'DEBUG',
        },
        'player': {
            'handlers': ['player_handler'],
            'level': 'DEBUG',
        },
        'auth_': {
            'handlers': ['auth_handler'],
            'level': 'DEBUG'
        },
        'tournament': {
            'handlers': ['tournament_handler'],
            'level': 'DEBUG'
        }
    },
}
